<#@ template language="C#"  hostspecific="true" #>
<#@ parameter type="System.String" name="databaseList"#>
<#@ parameter type="System.String" name="backupDirectory"#>
<#@ parameter type="System.String" name="restoreDirectory"#>
<#
string [] databases = databaseList.Split(new string[] { Environment.NewLine }, StringSplitOptions.None);

#>

<#
foreach(string database in databases)
{
#>
BACKUP DATABASE <#= database #> to Disk = '<#= backupDirectory #>\\<#= database #>.bak' 
<#
}
#>


DECLARE @Table TABLE (LogicalName varchar(128),[PhysicalName] varchar(128), [Type] varchar, [FileGroupName] varchar(128), [Size] varchar(128), 
            [MaxSize] varchar(128), [FileId]varchar(128), [CreateLSN]varchar(128), [DropLSN]varchar(128), [UniqueId]varchar(128), [ReadOnlyLSN]varchar(128), [ReadWriteLSN]varchar(128), 
            [BackupSizeInBytes]varchar(128), [SourceBlockSize]varchar(128), [FileGroupId]varchar(128), [LogGroupGUID]varchar(128), [DifferentialBaseLSN]varchar(128), [DifferentialBaseGUID]varchar(128), [IsReadOnly]varchar(128), [IsPresent]varchar(128), [TDEThumbprint]varchar(128)
)
DECLARE @Path varchar(1000)
DECLARE @LogicalNameData varchar(128),@LogicalNameLog varchar(128)

<#
foreach(string database in databases)
{
#>

DELETE FROM @TABLE
INSERT INTO @table
EXEC('
RESTORE FILELISTONLY 
   FROM DISK=''' +'<#= backupDirectory #>\\<#= database #>.bak' + '''
   ')

SET @LogicalNameData=(SELECT LogicalName FROM @Table WHERE Type='D')
SET @LogicalNameLog=(SELECT LogicalName FROM @Table WHERE Type='L')

SELECT @LogicalNameData,@LogicalNameLog

RESTORE DATABASE  <#= database #> FROM DISK = '<#= backupDirectory #>\\<#= database #>.bak' 
WITH MOVE  @LogicalNameData TO '<#= restoreDirectory #>\\<#= database #>.mdf',
MOVE @LogicalNameLog TO '<#= restoreDirectory #>\\<#= database #>.ldf';
   
<#
}
#>


<#
foreach(string database in databases)
{
#>

use <#= database #>
if EXISTS(select * FROM sysusers where name ='pssqluser')
BEGIN
drop USER pssqluser
END
create user pssqluser for Login pssqluser
EXEC sp_addrolemember 'db_owner', 'pssqluser';


if EXISTS(select * FROM sysusers where name ='silverblade')
BEGIN
drop USER silverblade
END
create user silverblade for Login silverblade
EXEC sp_addrolemember 'db_owner', 'silverblade';



<#
}
#>


<#
foreach(string database in databases)
{
#>

ALTER DATABASE <#= database #> SET OFFLINE WITH ROLLBACK IMMEDIATE

<#
}
#>